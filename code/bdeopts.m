function options = bdeopts(varargin)
% function options = bdeopts(varargin)
%
% BDEOPTS   Set options for the BDE solver.
%
% bdeopts 
% options = bdeopts('MaxNumSwitches', MaxNumSw)
% options = bdeopts('MaxNumSwitches', 'MaxEvals', MaxEv)
% options = bdeopts('MaxNumSwitches', MaxNumSw, 'MaxEvals', MaxEv)
%
% OUTPUT
%
% options: a structure containing the required values.
%
% INPUTS 
%
% varargin: Name/Value pairs specifying the following - 
% MaxNumSwitches: The maximum number of switches to be generated by the solver. Default value of Inf.
% MaxEvals: The maximum number of evaluations to be generated by the solver. Default value of Inf.
%
% DEPENDENCIES
%
% default_bdeopts (the default options).
%
% -------------------------------------------------------------------------
%
% Written by Kevin Doherty, University of Exeter, 2017
% k.doherty@exeter.ac.uk
%
% Code review and edits by Ozgur Akman, University of Exeter, 2019
% O.E.Akman@exeter.ac.uk
%
% Part of the BDEtools package, Â© Akman Laboratory of Automated Biotechnology, 2021
%

% Intialise.

[optNames, optTypes, defaults] = default_bdeopts;
optsOut = [optNames, optTypes, defaults];

% Set values. 

if nargin == 0 && nargout == 0 % If there are no inputs or outputs specified
                               % print out the names of properties.
    
    disp([{'Option name'}, {'Possible value'}, {'Default value'}])
    disp(optsOut)
    
elseif mod(nargin, 2) == 1
    
    error('bdeopts received an odd number of arguments. bdeopts requires that arguments are name-value pairs.');
    
elseif nargin == 0 && nargout > 0
    
    options = struct;
    
    for i = 1:numel(optNames)
        
        options.(optNames{i}) = defaults{i}; % If no inputs, set options to defaults.
        
    end
    
else
    
    options = struct;
    
    for i = 1:numel(optNames)
        
        options.(optNames{i}) = defaults{i}; % Set specified options to user-defined values. 
        
    end

    if nargin > 0
        
        for i = 1:2:nargin
            
            if ~ismember(varargin{i}, optNames)
                
                error('%s is not a recognised option name.', varargin{i})
                
            end
            
            options.(varargin{i}) = varargin{i+1};
            
        end
        
    end
    
end

end

