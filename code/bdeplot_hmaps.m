function bdeplot_hmaps(sol, varargin)
% function bdeplot_hmaps(sol, varargin)
%
% BDEPLOT_HMAPS   Plot multiple Boolean timeseries as black and white heatmaps.
%
% bdeplot_hmaps(sol)
% bdeplot_hmaps(sol, pickvars)
% bdeplot_hmaps(sol, pickvars, yticklabels)
% bdeplot_hmaps(sol, [], yticklabels)
% bdeplot_hmaps(sol, [], [])
%
% OUTPUTS
%
% None (the plot only). 
% 
% INPUTS
%
% sol: Structure generated by e.g. bdediscrete or bdesolve, with following fields - 
% sol.x: A vector with the times of switch points.
% sol.y: A Boolean matrix with n rows where n is the number of state variables. Each column is the state following each switch.
% 
% varargin{1} -
% pickvars: A vector indexing the state variables to plot. The default is to plot all variables. 
% varargin{2} -
% yticklabels: A cell string containing variable labels (e.g. yticklabels = {'x_1','x_2',...'x_n'}). The default is to plot the row number.
%
% DEPENDENCIES 
%
% bdesep.
%
% -------------------------------------------------------------------------
%
% Written by Ozgur Akman & Kevin Doherty, University of Exeter, 2021
% O.E.Akman@exeter.ac.uk
%
% Part of the BDEtools package, Â© Akman Laboratory of Automated Biotechnology, 2021
%

% Set the default variables to plot (all).

if nargin > 1 && ~isempty(varargin{1})    
    pickvars = varargin{1};    
else     
    pickvars = 1:size(sol.y, 1);    
end

% Set the default labels (row numbers).

if nargin > 2 && ~isempty(varargin{2})    
    yticklabels = varargin{2};    
else         
    numr = 1:size(sol.y, 1);
    numr = numr(:);
    str = num2str(numr);
    yticklabels = cellstr(str)';
end

if ~ishold
    hold on;
end

cnt = length(pickvars);

for k = pickvars
    
    % Extract the <k>th timeseries.
    
    ksol = bdesep(sol, k);
    in = find(ksol.y == 0);    
    xpairs = [in; in+1];
    
    if xpairs(end) > length(ksol.x)
        xpairs(:, end) = [];
    end
    
    % Plot the black bars.
    
    for j = 1:size(xpairs, 2)
       
        x1=ksol.x(xpairs(1,j));
        x2=ksol.x(xpairs(2,j));
        xvert=[x1 x2 x2 x1];
        yvert=[cnt cnt cnt-1 cnt-1];
        patch(xvert, yvert, 'k');   
        plot([sol.x(1) sol.x(end)], [cnt-1 cnt-1],'k');
        
    end
    
    cnt = cnt - 1;

end

% Set the y-axis tick marks.

set(gca, 'Box', 'On');`
yticks = 1:length(pickvars);
yticks = yticks-0.5;
set(gca,'YTick', yticks);

% Label the timeseries.

yticklabels = yticklabels(end:-1:1);
set(gca, 'YTickLabel', yticklabels);

% Set the x-axis limits.

ax = axis;
ax(1) = sol.x(1);
ax(2) = sol.x(end);
axis(ax);

end